{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","Login.js","HomeScreen.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateProviderValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","sendMessage","event","preventDefault","console","log","displayName","timestamp","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","AttachFile","InsertEmoticon","onSubmit","onChange","e","target","MicOutlined","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","HomeScreen","App","path","Boolean","window","location","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cef9829.chunk.js","sourcesContent":["// npm i firebase\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDmB_PJFQRDGtdT9oV4ecXVHbqnanp9UbQ\",\r\n  authDomain: \"whatsapp-clone-4f188.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-4f188\",\r\n  storageBucket: \"whatsapp-clone-4f188.appspot.com\",\r\n  messagingSenderId: \"618269431538\",\r\n  appId: \"1:618269431538:web:1dc84f6df32cf15a07e26b\",\r\n  measurementId: \"G-LWTVD6M9W0\"\r\n};\r\n\r\n// ----------------------------------------------------------\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n// ----------------------------------------------------------\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Avatar } from '@mui/material'\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(()=>{\r\n      if(id){\r\n          db.collection(\"rooms\")\r\n          .doc(id)\r\n          .collection('messages')\r\n          .orderBy('timestamp','desc')\r\n          .onSnapshot(snapshot => (\r\n            setMessages(snapshot.docs.map((doc) => doc.data()))\r\n          ))\r\n      }\r\n    }, [id]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Please enter name for chat\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <h2>Add new Chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateProviderValue = () => useContext(StateContext);\r\n\r\n/* ------------creating datalayer-----------------*/\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from '@mui/material/Avatar'\r\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { IconButton } from '@mui/material';\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\n\r\nimport SidebarChat from \"./SidebarChat.js\";\r\nimport db from \"./firebase\";\r\nimport \"./Sidebar.css\";\r\nimport { useStateProviderValue } from \"./StateProvider\";\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [{ user }, dispatch] = useStateProviderValue();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL} />\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlinedIcon />\r\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AttachFile,\r\n  InsertEmoticon,\r\n  MicOutlined,\r\n  MoreVert,\r\n  SearchOutlined,\r\n} from \"@mui/icons-material\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport \"./Chat.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateProviderValue } from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }] = useStateProviderValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"You type >>>\", input);\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      name: user.displayName,\r\n      message: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            last seen{\" \"}\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && \"chat__reciever\"\r\n            }`}\r\n          >\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticon />\r\n        <form onSubmit={sendMessage}>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicOutlined />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Button } from '@mui/material';\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { useStateProviderValue } from \"./StateProvider\";\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateProviderValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/765px-WhatsApp.svg.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to WhatsApp</h1>\r\n        </div>\r\n\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign In With Google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport './HomeScreen.css';\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n        <div className=\"homescreen\">\r\n        <div className=\"homescreen__container\">\r\n          <div className=\"homescreen__text\">\r\n          <img\r\n            src=\"https://web.whatsapp.com/img/intro-connection-hq-light_9466a20e6d2921a21ac7ab82419be157.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <h2>Keep your internet connected</h2>\r\n          <p>Whatsapp Web Clone connects your google account to sync the account info</p>\r\n          </div>\r\n  \r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chat from \"./Chat\";\r\nimport Login from \"./Login\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useStateProviderValue } from \"./StateProvider\";\r\nimport HomeScreen from \"./HomeScreen\";\r\n\r\nfunction App() {\r\n  const [{ user }, dispatch] = useStateProviderValue();\r\n  return (\r\n    <div className=\"app\">\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Router>\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/rooms/:roomId\">\r\n                <Chat />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <HomeScreen/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  // action -> type, [payload]\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport reducer, { initialState } from \"./reducer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}